# -*- coding: utf-8 -*-
"""(FA21-BSCS-0030)Lab_01_Graded.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1Z7qdadnp0nPUUc0C-tUGob2iBzRhhl6j

# **Task 01**

Create a nested dictionary representing a student database with information such as name, age, and grades for multiple students. Then, calculate the average grade for each student.

Input:
```
students = {
    "student 1": {"age": 15, "grades": [86, 55, 38]},
    "student 2": {"age": 17, "grades": [85, 92, 69]},
    # Add more students...
}
```


Expected Output:

{'student 1': 59.666666666666664, 'student 2': 82.0}
"""

students = {
    "student 1": {"age": 15, "grades": [86, 55, 38]},
    "student 2": {"age": 17, "grades": [85, 92, 98,99]},
    "student 3": {"age": 19, "grades": [69, 85, 98]},
    "student 4": {"age": 12, "grades": [59, 92, 99]},
    "student 5": {"age": 14, "grades": [88, 55, 93]},
    "student 6": {"age": 16, "grades": [88, 90, 90]},
}

students.items()

avg_grade ={}

for student, info in students.items():
  grades = info["grades"]
  avg_grades = sum(grades) / len(grades)
  avg_grade[student] = avg_grades

print(avg_grade)

"""# **Task 02**

Given a list of numbers, use a lambda function to filter out even numbers, square the remaining ones, and then find their sum.

Input: numbers = [1, 2, 3, 4, 5, 6, 7, 8, 9]

Expected Output: Result will be 165 (1^2 + 3^2 + 5^2 + 7^2 + 9^2)
"""

numbers = [1, 2, 3, 4, 5, 6, 7, 8, 9]
numbers2 = list(filter((lambda x: x%2 == 0), numbers))
for i in numbers:
  for j in numbers2:
    if i==j:
      numbers.remove(i)
res = 0
for i in numbers:
  res = i*i + res

res

"""# **Task 03**

Given a text string, create a list of unique words (case-insensitive) using list comprehension.

Input: text = "This is a sample text with some repeated words. This is a sample."

Expected Output: ['sample', 'text', 'words.', 'sample.', 'repeated', 'is' 'some', 'a', 'this', 'with']
"""

text = input("Enter your text here: ")
unique_words = list(set(word.lower() for word in text.split()))
print(unique_words)

"""# **Task no 04**

Write a function in which you ask for the following details from the user.

Name
username
Degree Program
Age
Contact
Percentage
Gender
isPassed (bool)
After receiving the values of the attributes you have to save the data in a dictionary name as UserData at index 0. repeat the process five times with an increment of index = index +1.

in the end, create a file named your id, save all the data in the file, and close it.



```
# Writing to a file
contents = {"aa": 12, "bb": 21} #
with open("myfile1.txt", "w+") as file:
    file.write(str(contents))        # writes a string to a file


OR

import json
with open("myfile2.txt", "w+") as file:
    file.write(json.dumps(contents)) # writes an object to a file
```


"""

import json

def save_user_data():
    UserData = {}
    for i in range(5):
        name = input("Enter name: ")
        username = input("Enter username: ")
        degree = input("Enter degree: ")
        program = input("Enter program: ")
        age = int(input("Enter age: "))
        contact = input("Enter contact: ")
        percentage = float(input("Enter percentage: "))
        gender = input("Enter gender: ")
        is_passed = input("Has the user passed? (True/False): ").lower() == 'true'

        UserData[i] = {
            "Name": name,
            "Username": username,
            "Degree": degree,
            "Program": program,
            "Age": age,
            "Contact": contact,
            "Percentage": percentage,
            "Gender": gender,
            "IsPassed": is_passed
        }

    # Save data to a file
    file_name = input("Enter your ID: ") + ".txt"
    with open(file_name, "w+") as file:
        file.write(json.dumps(UserData))

save_user_data()

